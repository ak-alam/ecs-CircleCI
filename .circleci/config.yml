version: 2.1

orbs:
  slack: circleci/slack@4.3.0

commands:
  notify_slack_error:
    steps:
      - slack/notify:
          event: fail
          template: basic_fail_1
  notify_slack_pass:
    steps:
      - slack/notify:
          event: pass
          template: basic_success_1            
          


jobs:
  build_and_push:
    machine:
      image: ubuntu-2004:2022.10.1
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region $REGION
            pip install ecs-deploy

# - run:
#     name: ECR Login
#     command: |
#       make ecr-login ECR_REPO=${ECR_REPO_FLASK}
      
      - run:
          name: Build & Push
          command: |
            export GITHUB_COMMIT_SHA=${{ github.sha }}
            export IMAGE_TAG=$(echo ${GITHUB_COMMIT_SHA:0:7})
            make build-image ECR_REPO=${ECR_REPO_FLASK} IMAGE_TAG=${IMAGE_TAG}
# - run:
#     name: Deploy To ECS using ecs deploy
#     command: |

#       make deploy-task CLUSTER_NAME=${CLUSTER_NAME} SERVICE_NAME=${SERVICE_NAME} IMAGE_TAG=${CIRCLE_SHA1}

      - notify_slack_error
      - notify_slack_pass
# make deploy-task CLUSTER_NAME="flask-circleCI" SERVICE_NAME="flask-backend" CONTAINER_NAME="circleCI_flask" ECR_REPO= ${ECR_REPO_FLASK} IMAGE_TAG=${TAG}


# make deploy-task CLUSTER_NAME="circle_ci_flask" SERVICE_NAME=""flask-api
            
workflows:
  my-workflow:
    jobs:
      - build_and_push:
          context:
            - test